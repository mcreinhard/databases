// Generated by CoffeeScript 1.7.1
(function() {
  var dbConnection, messages, mysql;

  mysql = require('mysql');


  /* If the node mysql module is not found on your system, you may
     need to do an "sudo npm install -g mysql". 
  
     You'll need to fill the following out with your mysql username and password.
     database: "chat" specifies that we're using the database called
     "chat", which we created by running schema.sql.
   */

  dbConnection = mysql.createConnection({
    user: "root",
    password: "batterchalks",
    database: "chat"
  });

  dbConnection.connect();


  /* Now you can make queries to the Mysql database using the
     dbConnection.query() method.
     See https://github.com/felixge/node-mysql for more details about
     using this module.
  
     You already know how to create an http server from the previous
     assignment; you can re-use most of that code here.
   */

  messages = {};

  messages.add = function(message) {
    var key, _i, _len, _ref;
    _ref = ['username', 'roomname', 'text'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      key = _ref[_i];
      if (message[key] == null) {
        message[key] = '';
      }
    }
    message.createdAt = (new Date()).toJSON();
    console.log(message);
    return dbConnection.query("INSERT INTO messages (username, roomname, text, createdAt) values ('" + message.username + "', '" + message.roomname + "', '" + message.text + "', '" + message.createdAt + "');", function(err) {
      if (err) {
        throw err;
      }
    });
  };

  messages.get = function(roomname, callback) {
    console.log(roomname);
    console.log("SELECT username, roomname, text FROM messages " + (roomname != null ? "WHERE roomname = '" + roomname + "'" : "") + " ORDER BY createdAt DESC;");
    return dbConnection.query("SELECT username, roomname, text FROM messages " + (roomname != null ? "WHERE roomname = '" + roomname + "'" : "") + " ORDER BY createdAt DESC;", function(err, rows) {
      if (err) {
        throw err;
      }
      console.log(rows);
      return callback(rows);
    });
  };

  module.exports = messages;

}).call(this);

//# sourceMappingURL=messages.map
